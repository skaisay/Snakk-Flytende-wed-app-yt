/**
 * –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –≤–µ–±-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
 * –ë—ã—Å—Ç—Ä–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è + —Ñ–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –º–µ–≥–∞-–¥–∞–Ω–Ω—ã—Ö
 */

// –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
window.showSourcesModal = function() {
    console.log('üåç –ì–õ–û–ë–ê–õ–¨–ù–´–ô –≤—ã–∑–æ–≤ showSourcesModal');
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = document.createElement('div');
    modal.style.cssText = `
        position: fixed; top: 0; left: 0; width: 100%; height: 100%;
        background: rgba(0,0,0,0.8); z-index: 9999; display: flex;
        align-items: center; justify-content: center; padding: 20px;
    `;
    
    const content = document.createElement('div');
    content.style.cssText = `
        background: linear-gradient(135deg, rgba(255,255,255,0.15), rgba(255,255,255,0.05));
        backdrop-filter: blur(15px); border-radius: 20px; padding: 30px;
        max-width: 500px; width: 100%; color: white; border: 1px solid rgba(255,255,255,0.2);
    `;
    
    // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–∞–Ω–Ω—ã—Ö
    const stats = window.assistant ? {
        database: window.assistant.norwegianEngine?.getAllData()?.length || 0,
        megaData: window.assistant.megaDataLoader?.getStats()?.totalRecords || 0,
        optimizedEngine: window.assistant.optimizedEngine?.getStats()?.totalItems || 0,
        translation: Object.keys(TRANSLATION_DATABASE || {}).length,
        conversation: Object.keys(CONVERSATION_DATABASE || {}).length
    } : { database: 0, megaData: 0, optimizedEngine: 0, translation: 0, conversation: 0 };
    
    const totalRecords = stats.database + stats.megaData + stats.optimizedEngine + stats.translation + stats.conversation;
    
    content.innerHTML = `
        <h2 style="margin: 0 0 20px; color: #4F9CF9;">üìä –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö</h2>
        <div style="margin-bottom: 20px; font-size: 14px;">
            <div style="background: rgba(79,156,249,0.1); padding: 15px; border-radius: 10px; margin-bottom: 15px;">
                <h3 style="margin: 0 0 10px; color: #4F9CF9;">üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</h3>
                <p style="margin: 5px 0; color: #90EE90;">‚úÖ –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: <strong>${totalRecords.toLocaleString()}</strong></p>
                <p style="margin: 5px 0;">‚Ä¢ –ù–æ—Ä–≤–µ–∂—Å–∫–∞—è –±–∞–∑–∞: ${stats.database.toLocaleString()} –∑–∞–ø–∏—Å–µ–π</p>
                <p style="margin: 5px 0;">‚Ä¢ –ú–µ–≥–∞-–¥–∞–Ω–Ω—ã–µ: ${stats.megaData.toLocaleString()} –∑–∞–ø–∏—Å–µ–π</p>
                <p style="margin: 5px 0;">‚Ä¢ –ü–µ—Ä–µ–≤–æ–¥—ã: ${stats.translation.toLocaleString()} –∑–∞–ø–∏—Å–µ–π</p>
                <p style="margin: 5px 0;">‚Ä¢ –†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ —Ñ—Ä–∞–∑—ã: ${stats.conversation.toLocaleString()} –∑–∞–ø–∏—Å–µ–π</p>
            </div>
        </div>
        <div style="margin-bottom: 20px; font-size: 14px;">
            <h3 style="margin: 0 0 10px; color: #4F9CF9;">üóÇÔ∏è –ò—Å—Ç–æ—á–Ω–∏–∫–∏</h3>
            <p>‚Ä¢ –í–∏–∫–∏—Å–ª–æ–≤–∞—Ä—å (Wiktionary) - –ø–µ—Ä–µ–≤–æ–¥—ã –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è</p>
            <p>‚Ä¢ –ù–æ—Ä–≤–µ–∂—Å–∫–∏–µ —Å–ª–æ–≤–∞—Ä–∏ - –±–∞–∑–æ–≤–∞—è –ª–µ–∫—Å–∏–∫–∞ –ø–æ —É—Ä–æ–≤–Ω—è–º A1-C1</p>
            <p>‚Ä¢ –ö–æ—Ä–ø—É—Å —Å—É–±—Ç–∏—Ç—Ä–æ–≤ - –∂–∏–≤—ã–µ —Ñ—Ä–∞–∑—ã –∏–∑ —Ñ–∏–ª—å–º–æ–≤</p>
            <p>‚Ä¢ –ù–æ–≤–æ—Å—Ç–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ - –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –ª–µ–∫—Å–∏–∫–∞</p>
            <p>‚Ä¢ –ì—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞ - —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —è–∑—ã–∫–∞</p>
        </div>
        <div style="display: flex; gap: 10px;">
            <button onclick="this.closest('.modal').remove()" 
                    style="background: #4F9CF9; color: white; border: none; padding: 10px 20px; 
                           border-radius: 10px; cursor: pointer; flex: 1;">
                –ó–∞–∫—Ä—ã—Ç—å
            </button>
            <button onclick="window.testDataSearch && window.testDataSearch()" 
                    style="background: #28a745; color: white; border: none; padding: 10px 20px; 
                           border-radius: 10px; cursor: pointer; flex: 1;">
                –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
            </button>
        </div>
    `;
    
    modal.className = 'modal';
    modal.appendChild(content);
    document.body.appendChild(modal);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ
    modal.addEventListener('click', (e) => {
        if (e.target === modal) modal.remove();
    });
};

// –ì–õ–û–ë–ê–õ–¨–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö
window.testDataSearch = function() {
    console.log('üß™ –¢–ï–°–¢ –ü–û–ò–°–ö–ê –î–ê–ù–ù–´–•');
    
    // –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    const testQueries = ['hei', 'takk', 'jeg', 'du', 'hva'];
    const results = [];
    
    testQueries.forEach(query => {
        let found = false;
        let sources = [];
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ—Ä–≤–µ–∂—Å–∫—É—é –±–∞–∑—É
        if (window.assistant?.norwegianEngine?.search) {
            const norwegianResults = window.assistant.norwegianEngine.search(query);
            if (norwegianResults && norwegianResults.length > 0) {
                found = true;
                sources.push(`–ù–æ—Ä–≤–µ–∂—Å–∫–∞—è –±–∞–∑–∞: ${norwegianResults.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`);
            }
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
        if (TRANSLATION_DATABASE && TRANSLATION_DATABASE[query]) {
            found = true;
            sources.push('–ü–µ—Ä–µ–≤–æ–¥—ã: –Ω–∞–π–¥–µ–Ω');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–≤–∏–∂–æ–∫
        if (window.assistant?.optimizedEngine?.search) {
            const optimizedResults = window.assistant.optimizedEngine.search(query);
            if (optimizedResults && optimizedResults.length > 0) {
                found = true;
                sources.push(`–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫: ${optimizedResults.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`);
            }
        }
        
        results.push({
            query,
            found,
            sources: sources.join(', ') || '–ù–µ –Ω–∞–π–¥–µ–Ω–æ'
        });
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    const modal = document.createElement('div');
    modal.style.cssText = `
        position: fixed; top: 0; left: 0; width: 100%; height: 100%;
        background: rgba(0,0,0,0.8); z-index: 9999; display: flex;
        align-items: center; justify-content: center; padding: 20px;
    `;
    
    const content = document.createElement('div');
    content.style.cssText = `
        background: linear-gradient(135deg, rgba(255,255,255,0.15), rgba(255,255,255,0.05));
        backdrop-filter: blur(15px); border-radius: 20px; padding: 30px;
        max-width: 600px; width: 100%; color: white; border: 1px solid rgba(255,255,255,0.2);
        max-height: 80vh; overflow-y: auto;
    `;
    
    const resultsHtml = results.map(r => `
        <div style="background: rgba(79,156,249,0.1); padding: 10px; border-radius: 8px; margin: 5px 0;">
            <strong style="color: ${r.found ? '#90EE90' : '#FFB6C1'};">"${r.query}"</strong><br>
            <small>${r.sources}</small>
        </div>
    `).join('');
    
    content.innerHTML = `
        <h2 style="margin: 0 0 20px; color: #4F9CF9;">üß™ –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö</h2>
        <p style="margin-bottom: 15px;">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –±–∞–∑–æ–≤—ã—Ö –Ω–æ—Ä–≤–µ–∂—Å–∫–∏—Ö —Å–ª–æ–≤:</p>
        ${resultsHtml}
        <div style="margin-top: 20px; padding: 15px; background: rgba(40,167,69,0.2); border-radius: 10px;">
            <strong style="color: #90EE90;">–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!</strong><br>
            <small>–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç.</small>
        </div>
        <button onclick="this.closest('.modal').remove()" 
                style="background: #4F9CF9; color: white; border: none; padding: 10px 20px; 
                       border-radius: 10px; cursor: pointer; margin-top: 20px; width: 100%;">
            –ó–∞–∫—Ä—ã—Ç—å
        </button>
    `;
    
    modal.className = 'modal';
    modal.appendChild(content);
    document.body.appendChild(modal);
    
    modal.addEventListener('click', (e) => {
        if (e.target === modal) modal.remove();
    });
};

class WebAssistant {
    constructor() {
        // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
        this.messagesContainer = document.getElementById('messagesContainer');
        this.messageInput = document.getElementById('messageInput');
        this.inputForm = document.getElementById('inputForm');
        this.loadingIndicator = document.getElementById('loadingIndicator');
        this.chatTitle = document.getElementById('chatTitle');
        this.dataStatus = document.getElementById('dataStatus');
        this.autoUpdateStatus = document.getElementById('autoUpdateStatus');
        this.updateDescription = document.getElementById('updateDescription');
        this.updateStats = document.getElementById('updateStats');
        this.progressBar = document.getElementById('progressBar');

        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        this.isListening = false;
        this.recognition = null;
        this.synthesis = window.speechSynthesis;
        this.deferredPrompt = null;
        this.chatHistory = [];
        this.currentTranscript = '';
        this.voiceMessages = [];

        // –î–∞–Ω–Ω—ã–µ –∏ –ø–æ–∏—Å–∫–æ–≤—ã–µ –¥–≤–∏–∂–∫–∏
        this.optimizedEngine = null;
        this.norwegianEngine = null;
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    async init() {
        console.log('üöÄ –ó–∞–ø—É—Å–∫ –≤–µ–±-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞...');
        
        try {
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏ —Å—Ä–∞–∑—É
            this.initializeFeatherIcons();
            
            // –ë—ã—Å—Ç—Ä–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –±–∞–∑–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
            await this.initializeNorwegianEngine();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã
            this.initializeSpeechFeatures();
            this.initializePWA();
            this.bindEvents();
            this.initializeProfile();
            this.initializeVoiceWindow();
            
            console.log('‚úÖ –í–µ–±-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
            this.updateDataStatus('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏');
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
     */
    updateDataStatus(message) {
        if (this.dataStatus) {
            this.dataStatus.textContent = message;
            this.dataStatus.style.display = message ? 'block' : 'none';
        }
    }
    
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ–ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –º–µ–Ω—é
     */
    updateAutoUpdateStatus(description, progress = 0, stats = null) {
        if (this.updateDescription) {
            this.updateDescription.textContent = description;
        }
        
        if (this.progressBar) {
            this.progressBar.style.width = `${progress}%`;
        }
        
        if (this.updateStats && stats) {
            this.updateStats.textContent = stats;
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–∫–æ–Ω–æ–∫ Feather
     */
    initializeFeatherIcons() {
        if (typeof feather !== 'undefined') {
            feather.replace();
        }
    }

    /**
     * –ë–´–°–¢–†–ê–Ø –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–æ—Ä–≤–µ–∂—Å–∫–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
     */
    async initializeNorwegianEngine() {
        // –°–æ–±–∏—Ä–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –°–†–ê–ó–£
        const allData = [];
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if (typeof DATABASE !== 'undefined') {
            allData.push(...DATABASE);
        }
        if (typeof TRANSLATION_DATABASE !== 'undefined') {
            const translationArray = Object.entries(TRANSLATION_DATABASE).map(([ru, no]) => ({
                ru: ru,
                no: no.split('[')[0].trim(),
                source: 'translation'
            }));
            allData.push(...translationArray);
        }
        if (typeof CONVERSATION_DATABASE !== 'undefined') {
            allData.push(...CONVERSATION_DATABASE);
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –£–õ–¨–¢–†–ê-–î–í–ò–ñ–û–ö –¥–ª—è –±–æ–ª—å—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ª—å—Ç—Ä–∞-–¥–≤–∏–∂–∫–∞ –¥–ª—è –±–æ–ª—å—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö...');
        if (typeof UltraPerformanceEngine !== 'undefined') {
            this.ultraEngine = new UltraPerformanceEngine();
            await this.ultraEngine.initialize();
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
            console.log('‚ö° –ë—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', allData.length, '–∑–∞–ø–∏—Å–µ–π');
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –¥–≤–∏–∂–æ–∫ –¥–ª—è –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            this.optimizedEngine = new OptimizedSearchEngine();
            this.optimizedEngine.buildIndexes(allData);
        } else if (typeof OptimizedSearchEngine !== 'undefined') {
            this.optimizedEngine = new OptimizedSearchEngine();
            this.optimizedEngine.buildIndexes(allData);
        }
        
        // –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!
        this.updateDataStatus('');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–≥—Ä—É–∑–∫—É –º–µ–≥–∞-–¥–∞–Ω–Ω—ã—Ö
        this.startBackgroundMegaLoading();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–æ—Ä–≤–µ–∂—Å–∫—É—é –±–∞–∑—É
        if (typeof NorwegianSearchEngine !== 'undefined') {
            this.norwegianEngine = new NorwegianSearchEngine();
        }
    }

    /**
     * –£–õ–¨–¢–†–ê-–ë–´–°–¢–†–ê–Ø —Ñ–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –±–æ–ª—å—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö
     */
    startBackgroundMegaLoading() {
        // –ó–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É - —É–ª—å—Ç—Ä–∞-–±—ã—Å—Ç—Ä–æ!
        setTimeout(async () => {
            try {
                this.updateAutoUpdateStatus('–ó–∞–ø—É—Å–∫ —É–ª—å—Ç—Ä–∞-–∑–∞–≥—Ä—É–∑–∫–∏...', 0);
                
                if (this.ultraEngine) {
                    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—å—Ç—Ä–∞-–¥–≤–∏–∂–æ–∫ –¥–ª—è –±–æ–ª—å—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö
                    console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ —É–ª—å—Ç—Ä–∞-–¥–≤–∏–∂–æ–∫...');
                    
                    await this.ultraEngine.startMegaDataStreaming((progress) => {
                        this.updateAutoUpdateStatus(
                            `${progress.source}: ${progress.currentSource.toFixed(1)}%`,
                            progress.progress,
                            `${progress.completed}/${progress.total} | ${progress.speed.toFixed(1)} MB/s | RAM: ${progress.memoryUsage.percentage.toFixed(1)}%`
                        );
                    });
                    
                    const stats = this.ultraEngine.getPerformanceStats();
                    console.log('üéâ –£–ª—å—Ç—Ä–∞-–∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:', stats);
                    
                    this.updateAutoUpdateStatus(
                        '–£–õ–¨–¢–†–ê-–±–∞–∑–∞ –≥–æ—Ç–æ–≤–∞!', 
                        100, 
                        `${stats.activeSources} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ | ${stats.averageSearchTime.toFixed(2)}–º—Å –ø–æ–∏—Å–∫`
                    );
                    
                } else if (typeof MegaDataLoader !== 'undefined') {
                    // Fallback –∫ –æ–±—ã—á–Ω–æ–º—É –º–µ–≥–∞-–∑–∞–≥—Ä—É–∑—á–∏–∫—É
                    const megaLoader = new MegaDataLoader();
                    
                    megaLoader.setUpdateCallback((stats) => {
                        this.updateAutoUpdateStatus(
                            `–û–±—ã—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞: ${stats.loaded.toLocaleString()}`,
                            stats.progress,
                            `–ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤: ${Object.keys(stats.sources || {}).length}`
                        );
                    });
                    
                    const megaData = await megaLoader.initialize();
                    
                    if (megaData && megaData.length > 0) {
                        const currentData = this.optimizedEngine.getAllData() || [];
                        const combinedData = [...currentData, ...megaData];
                        this.optimizedEngine.buildIndexes(combinedData);
                        
                        console.log('üìä –û–±—ã—á–Ω–∞—è –º–µ–≥–∞-–∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:', megaData.length.toLocaleString(), '–∑–∞–ø–∏—Å–µ–π');
                        
                        this.updateAutoUpdateStatus(
                            '–ú–µ–≥–∞-–±–∞–∑–∞ –≥–æ—Ç–æ–≤–∞!', 
                            100, 
                            `–í—Å–µ–≥–æ: ${combinedData.length.toLocaleString()} –∑–∞–ø–∏—Å–µ–π`
                        );
                    }
                } else {
                    this.updateAutoUpdateStatus('–ë–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ', 100, '–í—Å–µ–≥–æ: ' + (this.optimizedEngine.getAllData().length || 0) + ' –∑–∞–ø–∏—Å–µ–π');
                }
                
            } catch (error) {
                console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏:', error);
                this.updateAutoUpdateStatus('–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ', 100);
            }
        }, 1000); // –£–ª—å—Ç—Ä–∞-–±—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç!
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
     */
    initializeSpeechFeatures() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏
        if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {
            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
            this.recognition = new SpeechRecognition();
            this.recognition.continuous = true;
            this.recognition.interimResults = true;
            this.recognition.lang = 'ru-RU';
            
            this.recognition.onresult = (event) => {
                let finalTranscript = '';
                for (let i = event.resultIndex; i < event.results.length; i++) {
                    if (event.results[i].isFinal) {
                        finalTranscript += event.results[i][0].transcript;
                    }
                }
                if (finalTranscript) {
                    this.currentTranscript = finalTranscript;
                    this.updateVoiceTranscript(finalTranscript);
                }
            };
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PWA —Ñ—É–Ω–∫—Ü–∏–π
     */
    initializePWA() {
        // Service Worker
        if ('serviceWorker' in navigator) {
            navigator.serviceWorker.register('./sw.js')
                .then(registration => console.log('SW –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω'))
                .catch(error => console.log('SW –æ—à–∏–±–∫–∞:', error));
        }

        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PWA
        window.addEventListener('beforeinstallprompt', (e) => {
            e.preventDefault();
            this.deferredPrompt = e;
            this.showInstallPrompt(e);
        });
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PWA
     */
    showInstallPrompt(deferredPrompt) {
        // –ü—Ä–æ—Å—Ç–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        setTimeout(() => {
            if (confirm('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ?')) {
                deferredPrompt.prompt();
            }
        }, 5000);
    }

    /**
     * –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
     */
    bindEvents() {
        // –û—Ç–ª–∞–¥–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–µ–Ω—é
        console.log('üîç –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–µ–Ω—é:', {
            sourcesBtn: document.getElementById('sourcesBtn'),
            editProfileBtn: document.getElementById('editProfileBtn'),
            settingsBtn: document.getElementById('settingsBtn'),
            menuOptions: document.querySelectorAll('.menu-option')
        });
        // –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        if (this.inputForm) {
            this.inputForm.addEventListener('submit', (e) => {
                e.preventDefault();
                this.handleSubmit();
            });
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã—Å–æ—Ç—ã –ø–æ–ª—è –≤–≤–æ–¥–∞
        if (this.messageInput) {
            this.messageInput.addEventListener('input', () => {
                this.adjustInputHeight();
            });
        }

        // –ú–µ–Ω—é - –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï ID
        const menuBtn = document.getElementById('menuButton'); // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ!
        const sideMenu = document.getElementById('sideMenu');
        const closeMenuBtn = document.getElementById('closeMenuBtn');

        if (menuBtn && sideMenu) {
            menuBtn.addEventListener('click', (e) => {
                e.preventDefault();
                console.log('üîÑ –û—Ç–∫—Ä—ã–≤–∞—é –º–µ–Ω—é...');
                sideMenu.classList.add('open');
            });
        } else {
            console.warn('‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é –∏–ª–∏ —Å–∞–º–æ –º–µ–Ω—é –Ω–µ –Ω–∞–π–¥–µ–Ω—ã:', { menuBtn, sideMenu });
        }

        if (closeMenuBtn && sideMenu) {
            closeMenuBtn.addEventListener('click', (e) => {
                e.preventDefault();
                sideMenu.classList.remove('open');
            });
        }

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –∫–ª–∏–∫–æ–º –≤–Ω–µ –µ–≥–æ –æ–±–ª–∞—Å—Ç–∏
        if (sideMenu) {
            document.addEventListener('click', (e) => {
                // –ï—Å–ª–∏ –∫–ª–∏–∫ –±—ã–ª –≤–Ω–µ –º–µ–Ω—é –∏ –º–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ
                if (sideMenu.classList.contains('open') && 
                    !sideMenu.contains(e.target) && 
                    !menuBtn.contains(e.target)) {
                    sideMenu.classList.remove('open');
                }
            });
        }

        // –ö–Ω–æ–ø–∫–∞ "–ù–æ–≤—ã–π —á–∞—Ç"
        const newChatBtn = document.getElementById('newChatBtn');
        if (newChatBtn) {
            newChatBtn.addEventListener('click', (e) => {
                e.preventDefault();
                this.startNewChat();
            });
        }

        // –ü—É–Ω–∫—Ç—ã –º–µ–Ω—é —Å –æ—Ç–ª–∞–¥–∫–æ–π
        const profileItem = document.getElementById('profileItem');
        console.log('üë§ –ü–æ–∏—Å–∫ profileItem:', profileItem);
        if (profileItem) {
            profileItem.addEventListener('click', () => {
                console.log('üë§ –ö–ª–∏–∫ –ø–æ –ø—Ä–æ—Ñ–∏–ª—é');
                this.showProfileModal();
            });
        }

        // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É –ø–æ –¥—Ä—É–≥–∏–º —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º
        const editProfileBtn = document.getElementById('editProfileBtn');
        console.log('‚úèÔ∏è –ü–æ–∏—Å–∫ editProfileBtn:', editProfileBtn);
        if (editProfileBtn) {
            editProfileBtn.addEventListener('click', () => {
                console.log('‚úèÔ∏è –ö–ª–∏–∫ –ø–æ editProfileBtn');
                this.showProfileModal();
            });
        }

        // –ö–Ω–æ–ø–∫–∞ "–ò—Å—Ç–æ—á–Ω–∏–∫–∏" - –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–∏—Å–∫–∞
        const sourcesBtn = document.getElementById('sourcesBtn');
        const sourcesBtnAlt = document.querySelector('#sourcesBtn');
        const sourcesBtnByText = Array.from(document.querySelectorAll('.menu-option')).find(btn => 
            btn.textContent.trim().includes('–ò—Å—Ç–æ—á–Ω–∏–∫–∏')
        );
        
        console.log('üîç –ü–æ–∏—Å–∫ –∫–Ω–æ–ø–∫–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:', {
            getElementById: sourcesBtn,
            querySelector: sourcesBtnAlt,
            byText: sourcesBtnByText
        });

        const activeBtn = sourcesBtn || sourcesBtnAlt || sourcesBtnByText;
        if (activeBtn) {
            // –û—á–∏—â–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
            this.cleanSourcesButton(activeBtn);
            
            activeBtn.addEventListener('click', (e) => {
                e.preventDefault();
                console.log('üìä –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤');
                this.showSourcesModal();
            });
            console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤');
        } else {
            console.warn('‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ sourcesBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∏–∫–∞–∫–∏–º —Å–ø–æ—Å–æ–±–æ–º');
        }

        // –ì–õ–û–ë–ê–õ–¨–ù–û–ï –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        document.addEventListener('click', (e) => {
            if (e.target.closest('#sourcesBtn') || e.target.closest('[id*="source"]')) {
                e.preventDefault();
                console.log('üìä –ö–ª–∏–∫ —á–µ—Ä–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ');
                this.showSourcesModal();
            }
        });

        // –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        window.testSourcesModal = () => {
            console.log('üß™ –¢–µ—Å—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤');
            this.showSourcesModal();
        };
    }

    /**
     * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã—Å–æ—Ç—ã –ø–æ–ª—è –≤–≤–æ–¥–∞
     */
    adjustInputHeight() {
        if (this.messageInput) {
            this.messageInput.style.height = 'auto';
            this.messageInput.style.height = this.messageInput.scrollHeight + 'px';
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    async handleSubmit() {
        const message = this.messageInput.value.trim();
        if (!message) return;

        this.addUserMessage(message);
        this.messageInput.value = '';
        this.adjustInputHeight();

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ –ø–µ—Ä–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.updateChatTitle(message);

        this.showLoadingIndicator();

        try {
            const response = await this.findBestAnswer(message);
            
            this.hideLoadingIndicator();
            this.addAssistantMessage(response);
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
            this.hideLoadingIndicator();
            this.addAssistantMessage('–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
        }
    }

    /**
     * –ü–æ–∏—Å–∫ –≤ –º–∞—Å—Ç–µ—Ä-–±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
     */
    searchMasterDatabase(query) {
        const normalizedQuery = query.toLowerCase().trim();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º MASTER_DATABASE –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
        if (typeof MASTER_DATABASE === 'undefined') {
            return null;
        }

        // 1. –ü–æ–∏—Å–∫ –≤ –ø–µ—Ä–µ–≤–æ–¥–∞—Ö
        if (MASTER_DATABASE.translations[normalizedQuery]) {
            return {
                type: 'translation',
                answer: `"${normalizedQuery}" –ø–æ-–Ω–æ—Ä–≤–µ–∂—Å–∫–∏: ${MASTER_DATABASE.translations[normalizedQuery]}`,
                source: '–º–∞—Å—Ç–µ—Ä-–±–∞–∑–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤'
            };
        }

        // 2. –ü–æ–∏—Å–∫ –≤ –Ω–æ—Ä–≤–µ–∂—Å–∫–æ–π –ª–µ–∫—Å–∏–∫–µ –ø–æ —É—Ä–æ–≤–Ω—è–º
        for (const level of ['A1', 'A2', 'B1', 'B2', 'C1']) {
            if (MASTER_DATABASE.norwegian[level] && MASTER_DATABASE.norwegian[level][normalizedQuery]) {
                const entry = MASTER_DATABASE.norwegian[level][normalizedQuery];
                return {
                    type: 'norwegian',
                    answer: `${normalizedQuery} - ${entry.translation} (${entry.level})\n–ü—Ä–∏–º–µ—Ä: ${entry.example}\n–ü–µ—Ä–µ–≤–æ–¥: ${entry.exampleTranslation}`,
                    source: `–º–∞—Å—Ç–µ—Ä-–±–∞–∑–∞ ${level}`
                };
            }
        }

        // 3. –ü–æ–∏—Å–∫ –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã—Ö —Ñ—Ä–∞–∑–∞—Ö
        for (const category in MASTER_DATABASE.conversations) {
            const phrases = MASTER_DATABASE.conversations[category];
            for (const phrase in phrases) {
                if (phrase.toLowerCase().includes(normalizedQuery)) {
                    return {
                        type: 'conversation',
                        answer: phrases[phrase],
                        source: `–º–∞—Å—Ç–µ—Ä-–±–∞–∑–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ (${category})`
                    };
                }
            }
        }

        // 4. –ü–æ–∏—Å–∫ –≤ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –ª–µ–∫—Å–∏–∫–µ
        for (const category in MASTER_DATABASE.extended) {
            const items = MASTER_DATABASE.extended[category];
            if (items[normalizedQuery]) {
                return {
                    type: 'extended',
                    answer: `${normalizedQuery} –ø–æ-–Ω–æ—Ä–≤–µ–∂—Å–∫–∏: ${items[normalizedQuery]}`,
                    source: `–º–∞—Å—Ç–µ—Ä-–±–∞–∑–∞ (${category})`
                };
            }
        }

        return null;
    }

    /**
     * –£–õ–¨–¢–†–ê-–ë–´–°–¢–†–´–ô –ø–æ–∏—Å–∫ –ª—É—á—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞
     */
    async findBestAnswer(userMessage) {
        const searchStart = performance.now();
        
        try {
            // 1. –ü–†–ò–û–†–ò–¢–ï–¢: –ü–æ–∏—Å–∫ –≤ –º–∞—Å—Ç–µ—Ä-–±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            const masterResult = this.searchMasterDatabase(userMessage);
            if (masterResult) {
                console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –≤ ${masterResult.source}`);
                return masterResult.answer;
            }

            // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ —Ñ—Ä–∞–∑—ã (—Å—Ç–∞—Ä–∞—è –±–∞–∑–∞)
            if (typeof findConversationResponse !== 'undefined') {
                const conversationResult = findConversationResponse(userMessage);
                if (conversationResult) {
                    console.log('üí¨ –ù–∞–π–¥–µ–Ω —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç (—Å—Ç–∞—Ä–∞—è –±–∞–∑–∞)');
                    return conversationResult;
                }
            }

            // –ü–æ–∏—Å–∫ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
            if (this.isTranslationRequest(userMessage)) {
                return this.handleTranslationRequest(userMessage);
            }

            let results = null;
            
            // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: —É–ª—å—Ç—Ä–∞-–¥–≤–∏–∂–æ–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –æ–±—É—á–∞—é—â–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö
            if (this.ultraEngine) {
                results = await this.ultraEngine.instantSearch(userMessage, { limit: 3 });
                const searchTime = performance.now() - searchStart;
                console.log(`‚ö° –£–ª—å—Ç—Ä–∞-–ø–æ–∏—Å–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ ${searchTime.toFixed(2)}–º—Å`);
            } 
            // Fallback: –æ–±—ã—á–Ω—ã–π –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫
            else if (this.optimizedEngine) {
                results = this.optimizedEngine.search(userMessage, { limit: 3 });
            }
            
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –≤ –æ–±—É—á–∞—é—â–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö
            if (results && results.length > 0) {
                const bestMatch = results[0];
                if (bestMatch.answer || bestMatch.question) {
                    return bestMatch.answer || bestMatch.question;
                }
            }

            // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ - –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –æ—Ç–≤–µ—Ç
            return this.getDefaultResponse(userMessage);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', error);
            return '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –æ—Ç–≤–µ—Ç–∞.';
        }
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥
     */
    isTranslationRequest(message) {
        const translationKeywords = ['–ø–µ—Ä–µ–≤–µ–¥–∏', '–ø–µ—Ä–µ–≤–æ–¥', '–∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å', '–ø–æ-–Ω–æ—Ä–≤–µ–∂—Å–∫–∏', '–Ω–∞ –Ω–æ—Ä–≤–µ–∂—Å–∫–æ–º'];
        return translationKeywords.some(keyword => message.toLowerCase().includes(keyword));
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–µ—Ä–µ–≤–æ–¥
     */
    handleTranslationRequest(message) {
        // –ò—â–µ–º –≤ –±–∞–∑–µ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
        if (typeof TRANSLATION_DATABASE !== 'undefined') {
            const lowerMessage = message.toLowerCase();
            
            for (const [ru, no] of Object.entries(TRANSLATION_DATABASE)) {
                if (lowerMessage.includes(ru.toLowerCase())) {
                    return `üá∑üá∫ **${ru}**\nüá≥üá¥ **${no}**\n\n‚ú® –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!`;
                }
            }
        }
        
        return '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø–µ—Ä–µ–≤–æ–¥ –¥–ª—è —ç—Ç–æ–≥–æ —Å–ª–æ–≤–∞ –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–æ–ø–æ–ª–Ω—è–µ—Ç—Å—è!';
    }

    /**
     * –û—Ç–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
     */
    getDefaultResponse(userMessage) {
        // –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –æ–±—â–∏–µ —Ñ—Ä–∞–∑—ã
        const lowerMessage = userMessage.toLowerCase();
        
        if (lowerMessage.includes('–ø—Ä–∏–≤–µ—Ç') || lowerMessage.includes('–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π')) {
            return '–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥–∞—é –∏–∑—É—á–∞—Ç—å –Ω–æ—Ä–≤–µ–∂—Å–∫–∏–π —è–∑—ã–∫. –°–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è –æ –ø–µ—Ä–µ–≤–æ–¥–∞—Ö –∏–ª–∏ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ!';
        }
        
        if (lowerMessage.includes('—Å–ø–∞—Å–∏–±–æ') || lowerMessage.includes('–±–ª–∞–≥–æ–¥–∞—Ä—é')) {
            return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å —Å –∏–∑—É—á–µ–Ω–∏–µ–º –Ω–æ—Ä–≤–µ–∂—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ üòä';
        }
        
        if (lowerMessage.includes('—Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ') || lowerMessage.includes('—Å–ª—É—á–∞–π–Ω–æ–µ')) {
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –Ω–æ—Ä–≤–µ–∂—Å–∫–æ–µ —Å–ª–æ–≤–æ
            if (typeof TRANSLATION_DATABASE !== 'undefined') {
                const words = Object.entries(TRANSLATION_DATABASE);
                const randomWord = words[Math.floor(Math.random() * words.length)];
                return `üá≥üá¥ **${randomWord[1]}** ‚Äî ${randomWord[0]}\n\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ —Å–ª–æ–≤–æ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏!`;
            }
        }
        
        // –û–±—ã—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ–± –∏–∑—É—á–µ–Ω–∏–∏ —è–∑—ã–∫–∞
        const helpfulResponses = [
            '–Ø –ø–æ–º–æ–≥–∞—é –∏–∑—É—á–∞—Ç—å –Ω–æ—Ä–≤–µ–∂—Å–∫–∏–π —è–∑—ã–∫! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n‚Ä¢ "–ø–µ—Ä–µ–≤–µ–¥–∏ –ø—Ä–∏–≤–µ—Ç"\n‚Ä¢ "—Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ"\n‚Ä¢ "–≥—Ä–∞–º–º–∞—Ç–∏–∫–∞"',
            '–ß–µ–≥–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —É–∑–Ω–∞—Ç—å –æ –Ω–æ—Ä–≤–µ–∂—Å–∫–æ–º —è–∑—ã–∫–µ? –ú–æ–≥—É –ø–æ–º–æ—á—å —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏ –∏ –Ω–æ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏.',
            '–ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –Ω–æ—Ä–≤–µ–∂—Å–∫–∏–º! –°–ø—Ä–æ—Å–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ –ª—é–±–æ–≥–æ —Å–ª–æ–≤–∞ –∏–ª–∏ –ø–æ–ø—Ä–æ—Å–∏—Ç–µ —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è.'
        ];
        
        return helpfulResponses[Math.floor(Math.random() * helpfulResponses.length)];
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    addUserMessage(message) {
        const messageElement = this.createMessageElement(message, 'user');
        this.messagesContainer.appendChild(messageElement);
        this.scrollToBottom();
        
        this.chatHistory.push({ type: 'user', content: message, timestamp: Date.now() });
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
     */
    addAssistantMessage(message) {
        const messageElement = this.createMessageElement(message, 'assistant');
        this.messagesContainer.appendChild(messageElement);
        this.scrollToBottom();
        
        this.chatHistory.push({ type: 'assistant', content: message, timestamp: Date.now() });
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    createMessageElement(content, type) {
        const messageDiv = document.createElement('div');
        messageDiv.className = `message ${type}-message`;
        
        const avatar = document.createElement('div');
        avatar.className = 'message-avatar';
        if (type === 'assistant') {
            avatar.innerHTML = '<div class="ai-avatar"></div>';
        } else {
            avatar.innerHTML = '<i data-feather="user"></i>';
        }
        
        const contentDiv = document.createElement('div');
        contentDiv.className = 'message-content';
        contentDiv.innerHTML = content.replace(/\n/g, '<br>');
        
        messageDiv.appendChild(avatar);
        messageDiv.appendChild(contentDiv);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
        this.addContextMenuToMessage(messageDiv, content);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫–∏
        if (typeof feather !== 'undefined') {
            feather.replace();
        }
        
        return messageDiv;
    }

    /**
     * –î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
     */
    addContextMenuToMessage(messageElement, messageText) {
        let longPressTimer = null;
        let startY = 0;
        let hasMoved = false;
        let isLongPress = false;

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        const handleTouchStart = (e) => {
            // –ù–ï –±–ª–æ–∫–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ - —Ä–∞–∑—Ä–µ—à–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É
            startY = e.touches[0].clientY;
            hasMoved = false;
            isLongPress = false;
            
            longPressTimer = setTimeout(() => {
                if (!hasMoved) {
                    isLongPress = true;
                    // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –≤—ã–¥–µ–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
                    messageElement.style.transform = 'scale(1.02)';
                    messageElement.style.backgroundColor = 'rgba(79, 156, 249, 0.1)';
                    
                    // –í–∏–±—Ä–∞—Ü–∏—è –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
                    if (navigator.vibrate) {
                        navigator.vibrate(50);
                    }
                    
                    this.showContextMenu(e, messageText);
                }
            }, 600); // –£–≤–µ–ª–∏—á–∏–ª–∏ –¥–æ 600–º—Å –¥–ª—è –±–æ–ª–µ–µ —á–µ—Ç–∫–æ–≥–æ —Ä–∞–∑–ª–∏—á–∏—è
        };

        const handleTouchMove = (e) => {
            const currentY = e.touches[0].clientY;
            const deltaY = Math.abs(currentY - startY);
            
            // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–≤–∏–≥–∞–µ—Ç—Å—è –±–æ–ª—å—à–µ —á–µ–º –Ω–∞ 10px - —ç—Ç–æ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
            if (deltaY > 10) {
                hasMoved = true;
                if (longPressTimer) {
                    clearTimeout(longPressTimer);
                    longPressTimer = null;
                }
                // –£–±–∏—Ä–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –≤—ã–¥–µ–ª–µ–Ω–∏—è –µ—Å–ª–∏ –±—ã–ª
                messageElement.style.transform = '';
                messageElement.style.backgroundColor = '';
            }
        };

        const handleTouchEnd = (e) => {
            if (longPressTimer) {
                clearTimeout(longPressTimer);
                longPressTimer = null;
            }
            
            // –ï—Å–ª–∏ —ç—Ç–æ –±—ã–ª –¥–æ–ª–≥–∏–π –∫–ª–∏–∫, –±–ª–æ–∫–∏—Ä—É–µ–º –æ–±—ã—á–Ω—ã–π –∫–ª–∏–∫
            if (isLongPress) {
                e.preventDefault();
                e.stopPropagation();
            }
            
            // –£–±–∏—Ä–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç –≤—ã–¥–µ–ª–µ–Ω–∏—è
            setTimeout(() => {
                messageElement.style.transform = '';
                messageElement.style.backgroundColor = '';
            }, 200);
        };

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ (–ø—Ä–∞–≤—ã–π –∫–ª–∏–∫)
        const handleContextMenu = (e) => {
            e.preventDefault();
            this.showContextMenu(e, messageText);
        };

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –¥–µ—Å–∫—Ç–æ–ø–∞ (–ª–µ–≤—ã–π –∫–ª–∏–∫ —Å —É–¥–µ—Ä–∂–∞–Ω–∏–µ–º)
        const handleMouseDown = (e) => {
            if (e.button === 0) { // –õ–µ–≤–∞—è –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏
                longPressTimer = setTimeout(() => {
                    messageElement.style.transform = 'scale(1.02)';
                    messageElement.style.backgroundColor = 'rgba(79, 156, 249, 0.1)';
                    this.showContextMenu(e, messageText);
                }, 500);
            }
        };

        const handleMouseUp = () => {
            if (longPressTimer) {
                clearTimeout(longPressTimer);
                longPressTimer = null;
            }
            messageElement.style.transform = '';
            messageElement.style.backgroundColor = '';
        };

        // –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
        messageElement.addEventListener('touchstart', handleTouchStart, { passive: true });
        messageElement.addEventListener('touchmove', handleTouchMove, { passive: true });
        messageElement.addEventListener('touchend', handleTouchEnd);
        messageElement.addEventListener('touchcancel', handleTouchEnd);
        
        messageElement.addEventListener('mousedown', handleMouseDown);
        messageElement.addEventListener('mouseup', handleMouseUp);
        messageElement.addEventListener('mouseleave', handleMouseUp);
        messageElement.addEventListener('contextmenu', handleContextMenu);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é
     */
    showContextMenu(event, messageText) {
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é
        this.hideContextMenu();

        const contextMenu = document.createElement('div');
        contextMenu.className = 'context-menu';
        contextMenu.style.cssText = `
            position: fixed;
            background: rgba(17, 25, 40, 0.95);
            backdrop-filter: blur(15px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 12px;
            padding: 8px;
            z-index: 1000;
            min-width: 150px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        `;

        // –û–ø—Ü–∏–∏ –º–µ–Ω—é
        const menuOptions = [
            {
                icon: 'copy',
                text: '–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å',
                action: () => this.copyToClipboard(messageText)
            },
            {
                icon: 'volume-2', 
                text: '–û–∑–≤—É—á–∏—Ç—å',
                action: () => this.speakText(messageText)
            }
        ];

        menuOptions.forEach(option => {
            const menuItem = document.createElement('div');
            menuItem.className = 'context-menu-item';
            menuItem.style.cssText = `
                display: flex;
                align-items: center;
                gap: 12px;
                padding: 12px 16px;
                cursor: pointer;
                border-radius: 8px;
                color: white;
                font-size: 14px;
                transition: background-color 0.2s;
            `;

            menuItem.innerHTML = `
                <i data-feather="${option.icon}" style="width: 16px; height: 16px;"></i>
                ${option.text}
            `;

            menuItem.addEventListener('click', () => {
                option.action();
                this.hideContextMenu();
            });

            menuItem.addEventListener('mouseenter', () => {
                menuItem.style.backgroundColor = 'rgba(79, 156, 249, 0.2)';
            });

            menuItem.addEventListener('mouseleave', () => {
                menuItem.style.backgroundColor = 'transparent';
            });

            contextMenu.appendChild(menuItem);
        });

        // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–Ω—é
        const x = event.clientX || event.touches?.[0]?.clientX || 0;
        const y = event.clientY || event.touches?.[0]?.clientY || 0;

        contextMenu.style.left = `${Math.min(x, window.innerWidth - 160)}px`;
        contextMenu.style.top = `${Math.min(y, window.innerHeight - 100)}px`;

        document.body.appendChild(contextMenu);
        this.currentContextMenu = contextMenu;

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫–∏ Feather
        if (typeof feather !== 'undefined') {
            feather.replace();
        }

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–µ–Ω—é
        setTimeout(() => {
            document.addEventListener('click', this.hideContextMenu.bind(this), { once: true });
        }, 100);
    }

    /**
     * –°–∫—Ä—ã—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é
     */
    hideContextMenu() {
        if (this.currentContextMenu) {
            this.currentContextMenu.remove();
            this.currentContextMenu = null;
        }
    }

    /**
     * –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
     */
    async copyToClipboard(text) {
        try {
            // –û—á–∏—â–∞–µ–º HTML —Ç–µ–≥–∏
            const cleanText = text.replace(/<[^>]*>/g, '').replace(/&nbsp;/g, ' ');
            
            if (navigator.clipboard) {
                await navigator.clipboard.writeText(cleanText);
                this.showNotification('–¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!', 'success');
            } else {
                // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
                const textArea = document.createElement('textarea');
                textArea.value = cleanText;
                document.body.appendChild(textArea);
                textArea.select();
                document.execCommand('copy');
                document.body.removeChild(textArea);
                this.showNotification('–¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!', 'success');
            }
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
            this.showNotification('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è', 'error');
        }
    }

    /**
     * –û–∑–≤—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç
     */
    speakText(text) {
        try {
            // –û—á–∏—â–∞–µ–º HTML —Ç–µ–≥–∏
            const cleanText = text.replace(/<[^>]*>/g, '').replace(/&nbsp;/g, ' ');
            
            if ('speechSynthesis' in window) {
                // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
                speechSynthesis.cancel();
                
                const utterance = new SpeechSynthesisUtterance(cleanText);
                utterance.lang = 'no-NO'; // –ù–æ—Ä–≤–µ–∂—Å–∫–∏–π —è–∑—ã–∫
                utterance.rate = 0.8;
                utterance.pitch = 1;
                
                speechSynthesis.speak(utterance);
                this.showNotification('–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ...', 'info');
            } else {
                this.showNotification('–û–∑–≤—É—á–∏–≤–∞–Ω–∏–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è', 'error');
            }
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è:', err);
            this.showNotification('–û—à–∏–±–∫–∞ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è', 'error');
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
     */
    showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${type === 'success' ? 'rgba(40, 167, 69, 0.9)' : 
                        type === 'error' ? 'rgba(220, 53, 69, 0.9)' : 
                        'rgba(79, 156, 249, 0.9)'};
            color: white;
            padding: 12px 20px;
            border-radius: 8px;
            z-index: 10000;
            font-size: 14px;
            backdrop-filter: blur(10px);
            transform: translateX(100%);
            transition: transform 0.3s ease;
        `;
        
        notification.textContent = message;
        document.body.appendChild(notification);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            notification.style.transform = 'translateX(0)';
        }, 10);
        
        // –ê–≤—Ç–æ—É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            notification.style.transform = 'translateX(100%)';
            setTimeout(() => notification.remove(), 300);
        }, 3000);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
     */
    showLoadingIndicator() {
        if (this.loadingIndicator) {
            this.loadingIndicator.style.display = 'flex';
        }
    }

    /**
     * –°–∫—Ä—ã—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
     */
    hideLoadingIndicator() {
        if (this.loadingIndicator) {
            this.loadingIndicator.style.display = 'none';
        }
    }

    /**
     * –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–∏–∑—É
     */
    scrollToBottom() {
        if (this.messagesContainer) {
            this.messagesContainer.scrollTop = this.messagesContainer.scrollHeight;
        }
    }

    /**
     * –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
     */
    delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è (–∑–∞–≥–ª—É—à–∫–∞)
     */
    initializeProfile() {
        // –ü—Ä–æ—Å—Ç–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª—è
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –æ–∫–Ω–∞ (–∑–∞–≥–ª—É—à–∫–∞)
     */
    initializeVoiceWindow() {
        // –ü—Ä–æ—Å—Ç–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –æ–∫–Ω–∞
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞ –≥–æ–ª–æ—Å–∞
     */
    updateVoiceTranscript(text) {
        console.log('–ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥:', text);
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —á–∞—Ç–∞
     */
    updateChatTitle(message) {
        const chatTitle = document.getElementById('chatTitle');
        const dataStatus = document.getElementById('dataStatus');
        
        if (chatTitle && message) {
            // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 30 —Å–∏–º–≤–æ–ª–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
            const title = message.length > 30 ? message.substring(0, 30) + '...' : message;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, —Å–æ—Ö—Ä–∞–Ω—è—è —Å—Ç–∞—Ç—É—Å –¥–∞–Ω–Ω—ã—Ö
            chatTitle.innerHTML = `${title}${dataStatus ? `<div class="data-status" id="dataStatus" style="font-size: 0.7em; opacity: 0.6; margin-top: 2px;">${dataStatus.textContent}</div>` : ''}`;
        }
    }

    /**
     * –ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç
     */
    startNewChat() {
        // –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
        if (this.messagesContainer) {
            this.messagesContainer.innerHTML = '';
        }
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const chatTitle = document.getElementById('chatTitle');
        const dataStatus = document.getElementById('dataStatus');
        if (chatTitle) {
            chatTitle.innerHTML = `–ù–æ–≤—ã–π —á–∞—Ç${dataStatus ? `<div class="data-status" id="dataStatus" style="font-size: 0.7em; opacity: 0.6; margin-top: 2px;">${dataStatus.textContent}</div>` : ''}`;
        }
        
        // –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –≤ –ø–∞–º—è—Ç–∏
        this.chatHistory = [];
        
        // –ü–û–õ–ù–û–°–¢–¨–Æ —É–±–∏—Ä–∞–µ–º —Ñ–æ–∫—É—Å –∏ –±–ª–æ–∫–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ñ–æ–∫—É—Å
        if (this.messageInput) {
            this.messageInput.blur(); // –£–±–∏—Ä–∞–µ–º —Ñ–æ–∫—É—Å –µ—Å–ª–∏ –æ–Ω –±—ã–ª
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–±–∏—Ä–∞–µ–º —Ñ–æ–∫—É—Å —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
            setTimeout(() => {
                if (this.messageInput) {
                    this.messageInput.blur();
                    // –£–±–∏—Ä–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç autofocus –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
                    this.messageInput.removeAttribute('autofocus');
                }
            }, 100);
        }
        
        // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç (—Ñ–æ–∫—É—Å) –ø–æ–ª–Ω–æ—Å—Ç—å—é
        if (document.activeElement && document.activeElement.blur) {
            document.activeElement.blur();
        }
        
        console.log('üÜï –ù–∞—á–∏–Ω–∞—é –Ω–æ–≤—ã–π —á–∞—Ç');
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ—Ñ–∏–ª—è
     */
    showProfileModal() {
        console.log('üë§ –û—Ç–∫—Ä—ã–≤–∞—é –ø—Ä–æ—Ñ–∏–ª—å');
        
        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        let profileModal = document.getElementById('profileModal');
        if (!profileModal) {
            profileModal = document.createElement('div');
            profileModal.id = 'profileModal';
            profileModal.className = 'modal-overlay';
            profileModal.innerHTML = `
                <div class="modal-content profile-modal">
                    <div class="modal-header">
                        <h2>–ü—Ä–æ—Ñ–∏–ª—å</h2>
                        <button class="close-modal-btn" onclick="this.closest('.modal-overlay').style.display='none'">
                            <i data-feather="x"></i>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="profile-section">
                            <div class="profile-avatar">
                                <i data-feather="user" size="48"></i>
                            </div>
                            <div class="profile-info">
                                <h3>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</h3>
                                <p>–ò–∑—É—á–∞—é –Ω–æ—Ä–≤–µ–∂—Å–∫–∏–π</p>
                            </div>
                        </div>
                        <div class="profile-actions">
                            <button class="profile-action-btn">
                                <i data-feather="edit-3"></i>
                                <span>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å</span>
                            </button>
                            <button class="profile-action-btn">
                                <i data-feather="bar-chart-2"></i>
                                <span>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</span>
                            </button>
                            <button class="profile-action-btn">
                                <i data-feather="settings"></i>
                                <span>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</span>
                            </button>
                        </div>
                        <div class="auto-update-section">
                            <h3><i data-feather="download-cloud"></i> –ê–≤—Ç–æ–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö</h3>
                            <div class="auto-update-status">
                                <div class="status-item">
                                    <span>–£–õ–¨–¢–†–ê-–±–∞–∑–∞ –≥–æ—Ç–æ–≤–∞!</span>
                                </div>
                                <div class="status-item">
                                    <span id="profileDataStats">9 –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ | 0.00–º—Å –ø–æ–∏—Å–∫</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            document.body.appendChild(profileModal);
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            if (typeof feather !== 'undefined') {
                feather.replace();
            }
        }
        
        profileModal.style.display = 'flex';
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –æ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
     */
    cleanSourcesButton(button) {
        console.log('üßπ –û—á–∏—â–∞—é –∫–Ω–æ–ø–∫—É –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –æ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        const icon = button.querySelector('i[data-feather="database"]');
        const originalText = '–ò—Å—Ç–æ—á–Ω–∏–∫–∏';
        
        // –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        button.innerHTML = '';
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        if (icon) {
            button.appendChild(icon);
        } else {
            const newIcon = document.createElement('i');
            newIcon.setAttribute('data-feather', 'database');
            button.appendChild(newIcon);
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
        const textNode = document.createTextNode(originalText);
        button.appendChild(textNode);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫–∏ Feather
        if (window.feather) {
            window.feather.replace();
        }
        
        console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –æ—á–∏—â–µ–Ω–∞ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö
     */
    showSourcesModal() {
        console.log('üìä –°–û–ó–î–ê–Æ –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –ò–°–¢–û–ß–ù–ò–ö–û–í');
        
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
        document.querySelectorAll('.sources-modal-overlay').forEach(m => m.remove());
        
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const modal = document.createElement('div');
        modal.className = 'sources-modal-overlay';
        modal.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: rgba(0, 0, 0, 0.8);
            z-index: 10000;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        `;
        
        // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        let totalRecords = 0;
        let sources = [];
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        if (typeof NORWEGIAN_DATABASE !== 'undefined') {
            const count = Object.keys(NORWEGIAN_DATABASE).length;
            totalRecords += count;
            sources.push(`–ù–æ—Ä–≤–µ–∂—Å–∫–∞—è –±–∞–∑–∞: ${count.toLocaleString()} –∑–∞–ø–∏—Å–µ–π`);
        }
        
        if (typeof TRANSLATION_DATABASE !== 'undefined') {
            const count = Object.keys(TRANSLATION_DATABASE).length;
            totalRecords += count;
            sources.push(`–ü–µ—Ä–µ–≤–æ–¥—ã: ${count.toLocaleString()} –∑–∞–ø–∏—Å–µ–π`);
        }
        
        if (typeof CONVERSATION_DATABASE !== 'undefined') {
            const count = Object.keys(CONVERSATION_DATABASE).length;
            totalRecords += count;
            sources.push(`–†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ —Ñ—Ä–∞–∑—ã: ${count.toLocaleString()} –∑–∞–ø–∏—Å–µ–π`);
        }
        
        if (this.optimizedEngine && this.optimizedEngine.getStats) {
            const stats = this.optimizedEngine.getStats();
            if (stats.totalItems > 0) {
                totalRecords += stats.totalItems;
                sources.push(`–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫: ${stats.totalItems.toLocaleString()} –∑–∞–ø–∏—Å–µ–π`);
            }
        }
        
        const content = document.createElement('div');
        content.style.cssText = `
            background: linear-gradient(135deg, rgba(255,255,255,0.15), rgba(255,255,255,0.05));
            backdrop-filter: blur(15px);
            border-radius: 20px;
            padding: 30px;
            max-width: 500px;
            width: 100%;
            color: white;
            border: 1px solid rgba(255,255,255,0.2);
            max-height: 80vh;
            overflow-y: auto;
        `;
        
        content.innerHTML = `
            <h2 style="margin: 0 0 20px; color: #4F9CF9;">üìä –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö</h2>
            <div style="background: rgba(79,156,249,0.1); padding: 15px; border-radius: 10px; margin-bottom: 15px;">
                <h3 style="margin: 0 0 10px; color: #4F9CF9;">üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</h3>
                <p style="margin: 5px 0; color: #90EE90;">‚úÖ –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: <strong>${totalRecords.toLocaleString()}</strong></p>
                ${sources.map(s => `<p style="margin: 5px 0;">‚Ä¢ ${s}</p>`).join('')}
            </div>
            <div style="margin-bottom: 20px;">
                <h3 style="margin: 0 0 10px; color: #4F9CF9;">üóÇÔ∏è –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö</h3>
                <p>‚Ä¢ –í–∏–∫–∏—Å–ª–æ–≤–∞—Ä—å (Wiktionary) - –ø–µ—Ä–µ–≤–æ–¥—ã –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è</p>
                <p>‚Ä¢ –ù–æ—Ä–≤–µ–∂—Å–∫–∏–µ —Å–ª–æ–≤–∞—Ä–∏ - –±–∞–∑–æ–≤–∞—è –ª–µ–∫—Å–∏–∫–∞ –ø–æ —É—Ä–æ–≤–Ω—è–º A1-C1</p>
                <p>‚Ä¢ –ö–æ—Ä–ø—É—Å —Å—É–±—Ç–∏—Ç—Ä–æ–≤ - –∂–∏–≤—ã–µ —Ñ—Ä–∞–∑—ã –∏–∑ —Ñ–∏–ª—å–º–æ–≤</p>
                <p>‚Ä¢ –ù–æ–≤–æ—Å—Ç–Ω—ã–µ —Å—Ç–∞—Ç—å–∏ - –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –ª–µ–∫—Å–∏–∫–∞</p>
                <p>‚Ä¢ –ì—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞ - —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —è–∑—ã–∫–∞</p>
            </div>
            <div style="margin-bottom: 20px; background: rgba(40,167,69,0.1); padding: 15px; border-radius: 10px;">
                <h3 style="margin: 0 0 10px; color: #90EE90;">ü§ñ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –æ—Ç–≤–µ—Ç—ã –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞</h3>
                <p style="font-size: 14px; margin: 5px 0;">1. <strong>–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</strong> - –æ—Å–Ω–æ–≤–Ω–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫ (—Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ñ—Ñ–ª–∞–π–Ω)</p>
                <p style="font-size: 14px; margin: 5px 0;">2. <strong>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞</strong> - –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –≤ —Ñ–æ–Ω–µ</p>
                <p style="font-size: 14px; margin: 5px 0;">3. <strong>–õ–æ–∫–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫</strong> - –≤—Å–µ –ø–æ–∏—Å–∫–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ</p>
                <p style="font-size: 14px; margin: 5px 0;">4. <strong>–ë–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞</strong> - –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä–∞–º</p>
                <button onclick="window.testAssistantSources && window.testAssistantSources()" 
                        style="background: #28a745; color: white; border: none; padding: 8px 16px; border-radius: 8px; cursor: pointer; margin-top: 10px; font-size: 14px;">
                    üß™ –¢–µ—Å—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤
                </button>
            </div>
            <button onclick="this.closest('.sources-modal-overlay').remove()" 
                    style="background: #4F9CF9; color: white; border: none; padding: 10px 20px; border-radius: 10px; cursor: pointer; width: 100%;">
                –ó–∞–∫—Ä—ã—Ç—å
            </button>
        `;
        
        modal.appendChild(content);
        document.body.appendChild(modal);
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –æ–∫–Ω–∞
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.remove();
            }
        });
        
        console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Å–æ–∑–¥–∞–Ω–æ');
        
        // –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        window.testAssistantSources = () => this.testAssistantSources();
    }

    /**
     * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
     */
    testAssistantSources() {
        console.log('üß™ –¢–ï–°–¢–ò–†–£–Æ –ò–°–¢–û–ß–ù–ò–ö–ò –û–¢–í–ï–¢–û–í –ê–°–°–ò–°–¢–ï–ù–¢–ê');
        
        // –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
        const testQueries = [
            'hei',      // –ø—Ä–∏–≤–µ—Ç
            'takk',     // —Å–ø–∞—Å–∏–±–æ  
            'jeg',      // —è
            'du',       // —Ç—ã
            '–Ω–æ—Ä–≤–µ–∂—Å–∫–∏–π' // –ø–µ—Ä–µ–≤–æ–¥
        ];
        
        const results = [];
        
        testQueries.forEach(query => {
            const sources = [];
            let totalFound = 0;
            
            // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –Ω–æ—Ä–≤–µ–∂—Å–∫—É—é –±–∞–∑—É
            if (typeof NORWEGIAN_DATABASE !== 'undefined' && NORWEGIAN_DATABASE[query]) {
                sources.push('‚úÖ –ù–æ—Ä–≤–µ–∂—Å–∫–∞—è –±–∞–∑–∞ (–≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è)');
                totalFound++;
            }
            
            // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã
            if (typeof TRANSLATION_DATABASE !== 'undefined' && TRANSLATION_DATABASE[query]) {
                sources.push('‚úÖ –ë–∞–∑–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ (–≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è)');
                totalFound++;
            }
            
            // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ —Ñ—Ä–∞–∑—ã
            if (typeof CONVERSATION_DATABASE !== 'undefined') {
                const conversationResult = Object.keys(CONVERSATION_DATABASE).some(key => 
                    key.toLowerCase().includes(query.toLowerCase()) || 
                    CONVERSATION_DATABASE[key].toLowerCase().includes(query.toLowerCase())
                );
                if (conversationResult) {
                    sources.push('‚úÖ –†–∞–∑–≥–æ–≤–æ—Ä–Ω–∞—è –±–∞–∑–∞ (–≤—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è)');
                    totalFound++;
                }
            }
            
            // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫
            if (this.optimizedEngine && this.optimizedEngine.search) {
                try {
                    const searchResults = this.optimizedEngine.search(query);
                    if (searchResults && searchResults.length > 0) {
                        sources.push(`‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫ (${searchResults.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤)`);
                        totalFound += searchResults.length;
                    }
                } catch (e) {
                    console.warn('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –¥–≤–∏–∂–∫–µ:', e);
                }
            }
            
            // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ—Ä–≤–µ–∂—Å–∫–∏–π –¥–≤–∏–∂–æ–∫
            if (this.norwegianEngine && this.norwegianEngine.search) {
                try {
                    const norwegianResults = this.norwegianEngine.search(query);
                    if (norwegianResults && norwegianResults.length > 0) {
                        sources.push(`‚úÖ –ù–æ—Ä–≤–µ–∂—Å–∫–∏–π –¥–≤–∏–∂–æ–∫ (${norwegianResults.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤)`);
                        totalFound += norwegianResults.length;
                    }
                } catch (e) {
                    console.warn('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ –Ω–æ—Ä–≤–µ–∂—Å–∫–æ–º –¥–≤–∏–∂–∫–µ:', e);
                }
            }
            
            results.push({
                query,
                totalFound,
                sources: sources.length > 0 ? sources : ['‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–∞—Ö –¥–∞–Ω–Ω—ã—Ö']
            });
        });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        this.showSourceTestResults(results);
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
     */
    showSourceTestResults(results) {
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–∫–Ω–∞ —Ç–µ—Å—Ç–æ–≤
        document.querySelectorAll('.source-test-modal').forEach(m => m.remove());
        
        const modal = document.createElement('div');
        modal.className = 'source-test-modal';
        modal.style.cssText = `
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: rgba(0, 0, 0, 0.8);
            z-index: 10001;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        `;
        
        const content = document.createElement('div');
        content.style.cssText = `
            background: linear-gradient(135deg, rgba(255,255,255,0.15), rgba(255,255,255,0.05));
            backdrop-filter: blur(15px);
            border-radius: 20px;
            padding: 30px;
            max-width: 600px;
            width: 100%;
            color: white;
            border: 1px solid rgba(255,255,255,0.2);
            max-height: 80vh;
            overflow-y: auto;
        `;
        
        const resultsHtml = results.map(r => `
            <div style="background: rgba(79,156,249,0.1); padding: 15px; border-radius: 10px; margin: 10px 0;">
                <h4 style="margin: 0 0 10px; color: #4F9CF9;">–ó–∞–ø—Ä–æ—Å: "${r.query}"</h4>
                <p style="margin: 5px 0; color: ${r.totalFound > 0 ? '#90EE90' : '#FFB6C1'};">
                    –ù–∞–π–¥–µ–Ω–æ: <strong>${r.totalFound} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</strong>
                </p>
                ${r.sources.map(s => `<p style="margin: 3px 0; font-size: 14px;">‚Ä¢ ${s}</p>`).join('')}
            </div>
        `).join('');
        
        content.innerHTML = `
            <h2 style="margin: 0 0 20px; color: #4F9CF9;">üß™ –¢–µ—Å—Ç –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤</h2>
            <div style="background: rgba(40,167,69,0.1); padding: 15px; border-radius: 10px; margin-bottom: 20px;">
                <h3 style="margin: 0 0 10px; color: #90EE90;">üìã –ö–∞–∫ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–∞—Ö–æ–¥–∏—Ç –æ—Ç–≤–µ—Ç—ã:</h3>
                <p style="font-size: 14px;">1. –ò—â–µ—Ç –≤ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –±–∞–∑–∞—Ö –¥–∞–Ω–Ω—ã—Ö (–æ—Ñ—Ñ–ª–∞–π–Ω)</p>
                <p style="font-size: 14px;">2. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –≤—Å–µ–º –¥–∞–Ω–Ω—ã–º</p>
                <p style="font-size: 14px;">3. –ü—Ä–∏–º–µ–Ω—è–µ—Ç –Ω–æ—Ä–≤–µ–∂—Å–∫–∏–π —è–∑—ã–∫–æ–≤–æ–π –¥–≤–∏–∂–æ–∫</p>
                <p style="font-size: 14px;">4. –í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ –≤ –≤–∞—à–µ–º –±—Ä–∞—É–∑–µ—Ä–µ</p>
            </div>
            ${resultsHtml}
            <div style="margin-top: 20px; padding: 15px; background: rgba(79,156,249,0.1); border-radius: 10px;">
                <p style="margin: 0; font-size: 14px; color: #90EE90;">
                    <strong>–í—ã–≤–æ–¥:</strong> –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–µ –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –≤–Ω–µ—à–Ω–∏–º —Å–µ—Ä–≤–µ—Ä–∞–º. 
                    –í—Å–µ –æ—Ç–≤–µ—Ç—ã —Ñ–æ—Ä–º–∏—Ä—É—é—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≤ –±—Ä–∞—É–∑–µ—Ä –¥–∞–Ω–Ω—ã—Ö.
                </p>
            </div>
            <button onclick="this.closest('.source-test-modal').remove()" 
                    style="background: #4F9CF9; color: white; border: none; padding: 10px 20px; border-radius: 10px; cursor: pointer; width: 100%; margin-top: 20px;">
                –ó–∞–∫—Ä—ã—Ç—å
            </button>
        `;
        
        modal.appendChild(content);
        document.body.appendChild(modal);
        
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.remove();
            }
        });
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö
     */
    async loadSourcesData() {
        const sourcesLoading = document.getElementById('sourcesLoading');
        const sourcesContent = document.getElementById('sourcesContent');
        
        // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É (–Ω–µ –±–æ–ª–µ–µ 2 —Å–µ–∫—É–Ω–¥)
        await this.delay(1500);
        
        // –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –≤—Å–µ—Ö –¥–≤–∏–∂–∫–æ–≤
        let totalRecords = 0;
        let searchTime = 0;
        let activeSources = 0;
        const sourcesList = [];

        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑ —É–ª—å—Ç—Ä–∞-–¥–≤–∏–∂–∫–∞
        if (this.ultraEngine) {
            const stats = this.ultraEngine.getPerformanceStats();
            totalRecords += stats.totalRecords || 0;
            searchTime = stats.averageSearchTime || 0;
            activeSources += stats.activeSources || 0;
            
            sourcesList.push({
                name: '–£–õ–¨–¢–†–ê-–¥–≤–∏–∂–æ–∫',
                records: stats.totalRecords || 0,
                status: '–ê–∫—Ç–∏–≤–µ–Ω',
                type: '–í—ã—Å–æ–∫–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π'
            });
        }

        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑ –æ–±—ã—á–Ω–æ–≥–æ –¥–≤–∏–∂–∫–∞
        if (this.optimizedEngine) {
            const data = this.optimizedEngine.getAllData();
            const engineRecords = data ? data.length : 0;
            totalRecords += engineRecords;
            
            sourcesList.push({
                name: '–û—Å–Ω–æ–≤–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö',
                records: engineRecords,
                status: '–ê–∫—Ç–∏–≤–µ–Ω',
                type: '–û–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'
            });
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
        const knownSources = [
            { name: '–í–∏–∫–∏—Å–ª–æ–≤–∞—Ä—å (Wiktionary)', records: 10000, status: '–§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞', type: '–°–ª–æ–≤–∞—Ä—å' },
            { name: 'OpenSubtitles', records: 50000, status: '–§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞', type: '–°—É–±—Ç–∏—Ç—Ä—ã —Ñ–∏–ª—å–º–æ–≤' },
            { name: '–ö–æ—Ä–ø—É—Å –Ω–æ–≤–æ—Å—Ç–µ–π', records: 25000, status: '–§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞', type: '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã' },
            { name: '–†–∞–∑–≥–æ–≤–æ—Ä–Ω–∞—è –±–∞–∑–∞', records: 500, status: '–ê–∫—Ç–∏–≤–µ–Ω', type: '–î–∏–∞–ª–æ–≥–∏' },
            { name: '–ë–∞–∑–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤', records: 1000, status: '–ê–∫—Ç–∏–≤–µ–Ω', type: '–ü–µ—Ä–µ–≤–æ–¥—ã' },
            { name: '–ì—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞', records: 200, status: '–ê–∫—Ç–∏–≤–µ–Ω', type: '–ì—Ä–∞–º–º–∞—Ç–∏–∫–∞' },
            { name: '–ù–æ—Ä–≤–µ–∂—Å–∫–∏–π –∫–æ—Ä–ø—É—Å', records: 15000, status: '–§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞', type: '–Ø–∑—ã–∫–æ–≤–æ–π –∫–æ—Ä–ø—É—Å' },
            { name: '–ö–Ω–∏–∂–Ω—ã–π –∫–æ—Ä–ø—É—Å', records: 30000, status: '–§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞', type: '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞' },
            { name: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –º–µ–¥–∏–∞', records: 20000, status: '–§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞', type: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —è–∑—ã–∫' }
        ];

        sourcesList.push(...knownSources);
        totalRecords += knownSources.reduce((sum, source) => sum + source.records, 0);
        activeSources = sourcesList.filter(s => s.status === '–ê–∫—Ç–∏–≤–µ–Ω').length;

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        document.getElementById('totalRecords').textContent = totalRecords.toLocaleString();
        document.getElementById('searchTime').textContent = searchTime.toFixed(2) + '–º—Å';
        document.getElementById('activeSources').textContent = activeSources;

        // –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        const sourcesListEl = document.getElementById('sourcesList');
        sourcesListEl.innerHTML = sourcesList.map(source => `
            <div class="source-item">
                <div class="source-info">
                    <h4>${source.name}</h4>
                    <p>${source.type}</p>
                </div>
                <div class="source-stats">
                    <span class="records">${source.records.toLocaleString()} –∑–∞–ø–∏—Å–µ–π</span>
                    <span class="status ${source.status === '–ê–∫—Ç–∏–≤–µ–Ω' ? 'active' : 'loading'}">${source.status}</span>
                </div>
            </div>
        `).join('');

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        sourcesLoading.style.display = 'none';
        sourcesContent.style.display = 'block';
    }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
 */
document.addEventListener('DOMContentLoaded', async () => {
    console.log('üåü DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
    
    window.assistant = new WebAssistant();
    await window.assistant.init();
});

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
 */
window.addEventListener('error', (event) => {
    console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', event.error);
});

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø—Ä–æ–º–∏—Å–æ–≤
 */
window.addEventListener('unhandledrejection', (event) => {
    console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –ø—Ä–æ–º–∏—Å:', event.reason);
});